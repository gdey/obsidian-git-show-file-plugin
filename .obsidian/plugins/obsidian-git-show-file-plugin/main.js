/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var C=(o,t)=>{for(var i in t)w(o,i,{get:t[i],enumerable:!0})},M=(o,t,i,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of $(t))!b.call(o,e)&&e!==i&&w(o,e,{get:()=>t[e],enumerable:!(s=P(t,e))||s.enumerable});return o};var B=o=>M(w({},"__esModule",{value:!0}),o);var F={};C(F,{default:()=>h});module.exports=B(F);var c=require("obsidian"),h=class extends c.Plugin{async onload(){console.log("loading "+this.manifest.name+" plugin: v"+this.manifest.version),this.addCommand({id:"git-show",name:"Show Git File Contents",callback:()=>this.showGitFileContents()})}onLayoutReady(){this.app.plugins.getPlugin("obsidian-git")||new c.Notice("The Obsidian Git Plugin was not found. This is needed for this Plugin.")}async showGitFileContents(){let t=this.app.workspace.getActiveFile();if(!t)return;let i=await this.app.vault.read(t),s=await this.processGitShowBlocks(i);await this.app.vault.modify(t,s)}async processGitShowBlocks(t){let i=/```([\w.-]+)\s+--\s+git-show\s+([\w.-]+):([\w/.-]+)(?::(\d+)(?::(\d+))?)?\s*([\s\S]*?)```/g,s=[],e;for(;(e=i.exec(t))!==null;){let[r,n,a,p,l,d]=e,u=(async()=>{let f=await this.resolveBranchOrHash(a),m=await this.getFileContents(f,p,l,d),y=l?`:${l}`:":1",v=d?`:${d}`:"";return{fullMatch:r,newBody:`\`\`\`${n} -- git-show ${a}:${p}${y}${v}
${m}
\`\`\``}})();s.push(u)}let g=await Promise.all(s);for(let{fullMatch:r,newBody:n}of g)t=t.replace(r,n);return t}async resolveBranchOrHash(t){let i=[];return i.push("rev-parse",t),await this.git(i).then(s=>s.trim())}async getFileContents(t,i,s,e){let g=[];g.push("show",`${t}:${i}`);let r=await this.git(g).then(l=>l.split(`
`));var n=s?parseInt(s)-1:0;n=n>0?n:1;var a=e?parseInt(e):r.length;return a===n?a=n+1:a<n&&(a=r.length),a=a>n?a:r.length,r.slice(n,a).join(`
`)}git(t){let s=this.app.plugins.getPlugin("obsidian-git").gitManager;return console.log("gitManager is: ",s),s.git.raw(t)}};
